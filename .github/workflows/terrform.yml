name: Deploy Azure Data Factory
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  terraform:
    name: Deploy ADF
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, prod]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: |
          cd azure-infra/environments/${{ matrix.environment }}
          terraform init
      - name: Set Environment Variables
        run: |
          if [ "${{ matrix.environment }}" == "dev" ]; then
            echo "RESOURCE_GROUP=${{ secrets.RESOURCE_GROUP_DEV }}" >> $GITHUB_ENV
            echo "LOCATION=${{ secrets.LOCATION_DEV }}" >> $GITHUB_ENV
            echo "ADF_NAME=${{ secrets.ADF_NAME_DEV }}" >> $GITHUB_ENV
          elif [ "${{ matrix.environment }}" == "prod" ]; then
            echo "RESOURCE_GROUP=${{ secrets.RESOURCE_GROUP_PROD }}" >> $GITHUB_ENV
            echo "LOCATION=${{ secrets.LOCATION_PROD }}" >> $GITHUB_ENV
            echo "ADF_NAME=${{ secrets.ADF_NAME_PROD }}" >> $GITHUB_ENV
          fi

      - name: Terraform Plan
        run: |
          cd azure-infra/environments/${{ matrix.environment }}
          terraform plan -out=tfplan -var "resource_group_name=$RESOURCE_GROUP" -var "location=$LOCATION" -var "adf_name=$ADF_NAME"

      - name: Terraform Plan
        run: |
          cd azure-infra/environments/${{ matrix.environment }}
          terraform plan -out=tfplan -var "resource_group_name=${{ secrets.RESOURCE_GROUP_${{ matrix.environment }}}}" -var "location=${{ secrets.LOCATION_${{ matrix.environment }}}}" -var "adf_name=${{ secrets.ADF_NAME_${{ matrix.environment }}}}"

      - name: Terraform Apply (only on main/release)
        if: github.ref == 'refs/heads/main' || github.event_name == 'release'
        run: |
          cd azure-infra/environments/${{ matrix.environment }}
          terraform apply -auto-approve tfplan
