name: Deploy Azure Data Factory

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  terraform:
    name: Deploy ADF
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, prod]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Environment Variables
        run: |
          ENV_UPPER=$(echo "${{ matrix.environment }}" | tr '[:lower:]' '[:upper:]')
          echo "RESOURCE_GROUP=${{ secrets[format('RESOURCE_GROUP_%s', ENV_UPPER)] }}" >> $GITHUB_ENV
          echo "LOCATION=${{ secrets[format('LOCATION_%s', ENV_UPPER)] }}" >> $GITHUB_ENV
          echo "ADF_NAME=${{ secrets[format('ADF_NAME_%s', ENV_UPPER)] }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          cd azure-infra/environments/${{ matrix.environment }}
          terraform init

      - name: Terraform Plan
        run: |
          cd azure-infra/environments/${{ matrix.environment }}
          terraform plan -out=tfplan \
            -var "resource_group_name=$RESOURCE_GROUP" \
            -var "location=$LOCATION" \
            -var "adf_name=$ADF_NAME"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          cd azure-infra/environments/${{ matrix.environment }}
          terraform apply -auto-approve tfplan
